// All

buildscript {
  apply from: "${rootDir}/build/dependencies.gradle"
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath gradle_plugins.values()
  }
}

// define global variables

ext.global = [
  javac_compatibility: 1.8,
  root_dir: "${rootProject.projectDir}",
  build_time: new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC")),
]

allprojects {
  buildDir = new File(global.root_dir, "out/${project.name}")

  apply plugin: 'idea'
  idea {
    module {
      inheritOutputDirs = true
    }
  }
}

subprojects {
  apply from: "${rootDir}/build/dependencies.gradle"

  repositories {
    mavenCentral()
    jcenter()
  }

  apply plugin: 'java'

  sourceCompatibility = global.javac_compatibility
  targetCompatibility = global.javac_compatibility

  dependencies {
    testCompile test_libraries.junit
    testCompile test_libraries.mockito
    testCompile test_libraries.powermock_junit4
    testCompile test_libraries.powermock_api_mockito
  }

  tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
  }

  tasks.withType(Test) {
    // avoid "> superClassName is empty!" error
    scanForTestClasses = false
    include "**/*Test.class"
    exclude "**/Abstract*.class"
  }
}


