buildscript {
    apply from: "${rootDir}/build/dependencies.gradle"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath gradle_plugins.values()
        classpath "io.freefair.gradle:lombok-plugin:6.6.1"
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.7.7'
    }
}

// define global variables
ext.global = [
        javac_compatibility: 1.8,
        root_dir           : "${rootProject.projectDir}",
        build_time         : new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC")),
]

allprojects {
    buildDir = new File(global.root_dir, "out/${project.name}")

    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = true
        }
    }
}

subprojects {
    apply from: "${rootDir}/build/dependencies.gradle"

    ext.local = [
      version: "${RELEASE_VERSION}",
    ]

    repositories {
        maven {
            url 'https://maven-local.mobisummer-inc.com/repository/maven-public'
        }
        mavenCentral()
        jcenter()
    }

    apply plugin: 'java'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    sourceCompatibility = global.javac_compatibility
    targetCompatibility = global.javac_compatibility

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

//    tasks.withType(Test) {
//        // avoid "> superClassName is empty!" error
//        scanForTestClasses = false
//        include "**/*Test.class"
//        exclude "**/Abstract*.class"
//    }
    test {
        enabled true
        useJUnitPlatform()
    }
}